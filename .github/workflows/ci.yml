name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
        include:
          - php-version: '5.6'
            composer-version: 'v1'
            stability: 'prefer-stable'
          - php-version: '7.0'
            composer-version: 'v1'
            stability: 'prefer-stable'
          - php-version: '7.1'
            composer-version: 'v1'
            stability: 'prefer-stable'
          - php-version: '7.2'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '7.3'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '7.4'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '8.0'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '8.1'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '8.2'
            composer-version: 'v2'
            stability: 'prefer-stable'
          - php-version: '8.3'
            composer-version: 'v2'
            stability: 'prefer-stable'
    
    name: PHP ${{ matrix.php-version }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, xml, ctype, json, curl
        coverage: none
        tools: composer:${{ matrix.composer-version || 'v2' }}
    
    - name: Validate composer.json and composer.lock
      if: matrix.php-version >= '7.2'
      run: composer validate --strict
    
    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.stability }}-${{ hashFiles('**/composer.json') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-${{ matrix.stability }}-
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Remove composer.lock for compatibility
      if: matrix.php-version != '8.2'
      run: rm -f composer.lock
    
    - name: Install dependencies (with update for older PHP)
      if: matrix.php-version != '8.2'
      run: |
        if [ "${{ matrix.stability }}" = "prefer-lowest" ]; then
          composer update --prefer-dist --no-progress --prefer-lowest --prefer-stable
        else
          composer update --prefer-dist --no-progress --prefer-stable
        fi
    
    - name: Install dependencies (locked for PHP 8.2)
      if: matrix.php-version == '8.2'
      run: composer install --prefer-dist --no-progress
    
    - name: Run compatibility test
      run: php -d error_reporting='E_ERROR | E_PARSE' .github/test-compatibility.php
    
    - name: Run test suite (modern PHP)
      if: matrix.php-version >= '7.2'
      run: php -d error_reporting='E_ERROR | E_PARSE' vendor/bin/phpunit
    
    - name: Run test suite (legacy PHP)
      if: matrix.php-version < '7.2'
      run: |
        # For PHP 5.6-7.1, run tests directly if PHPUnit is available
        if [ -f vendor/bin/phpunit ]; then
          php -d error_reporting='E_ERROR | E_PARSE' vendor/bin/phpunit
        else
          echo "⚠️ PHPUnit not available for PHP ${{ matrix.php-version }}, running compatibility test only"
          php -d error_reporting='E_ERROR | E_PARSE' .github/test-compatibility.php
        fi
    
    - name: Run linter (modern PHP)
      if: matrix.php-version >= '7.2'
      run: composer lint || echo "Linting completed with warnings"
    
    - name: Skip linter (legacy PHP)
      if: matrix.php-version < '7.2'
      run: echo "⚠️ Skipping linter for PHP ${{ matrix.php-version }} (PHP_CodeSniffer requires PHP 7.2+)"

  test-coverage:
    runs-on: ubuntu-latest
    name: Coverage Report
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        extensions: mbstring, xml, ctype, json, curl
        coverage: xdebug
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run test suite with coverage
      run: composer test:coverage